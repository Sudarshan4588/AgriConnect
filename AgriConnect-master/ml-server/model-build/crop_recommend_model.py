# -*- coding: utf-8 -*-
"""crop_recommend_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AF42QLTmhSV5JGR9Rg_E7pUWzEo85W9j
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB
import xgboost as xgb
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics
import pickle

df=pd.read_csv('dataset.csv')
df



df['label'].unique()

df['label'].value_counts()

features = df[['N', 'P','K','temperature', 'humidity', 'ph', 'rainfall']]
target = df['label']
labels = df['label']

Xtrain, Xtest, Ytrain, Ytest = train_test_split(features,target,test_size = 0.2,random_state =2)

model = GaussianNB()
model.fit(Xtrain,Ytrain)
predicted_values = model.predict(Xtest)
x = metrics.accuracy_score(Ytest, predicted_values)
print("Naive Bayes's Accuracy is: ", x)

with open('model.pkl', 'wb') as f:
    pickle.dump(model, f)

RF = RandomForestClassifier(n_estimators=20, random_state=0)
RF.fit(Xtrain,Ytrain)
predicted_values = RF.predict(Xtest)
x = metrics.accuracy_score(Ytest, predicted_values)
print("Random Forest's Accuracy is: ", x)

DecisionTree = DecisionTreeClassifier(criterion="entropy",random_state=2,max_depth=5)
DecisionTree.fit(Xtrain,Ytrain)
predicted_values = DecisionTree.predict(Xtest)
x = metrics.accuracy_score(Ytest, predicted_values)
print("DecisionTrees's Accuracy is: ", x*100)

le = LabelEncoder()
le.fit(df['label'].unique())
target = le.transform(df['label'])
Xtrain, Xtest, Ytrain, Ytest = train_test_split(features, target, test_size=0.2, random_state=2)
XB = xgb.XGBClassifier()
XB.fit(Xtrain, Ytrain)
predicted_values = XB.predict(Xtest)
x = metrics.accuracy_score(Ytest, predicted_values)
print("XGBoost's Accuracy is: ", x)

